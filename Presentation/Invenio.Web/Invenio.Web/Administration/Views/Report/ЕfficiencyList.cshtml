@model Invenio.Admin.Models.Report.ЕfficiencyListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Catalog.Еfficiency").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Еfficiency");
}
@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Report.Efficiency")
    </h1>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    @*<div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.SearchCustomerName)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.SearchCustomerName)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-Customers" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CountryId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownListFor(model => model.CountryId, Model.AvailableCountries, new { onchange = "stateProvinceFilter()" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.StateProvinceId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownListFor(model => model.StateProvinceId, Model.AvailableStates)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.SearchPublishedId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownListFor(model => model.SearchPublishedId, Model.AvailablePublished)
                                </div>
                            </div>
                        </div>
                    </div>*@
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="Customers-grid"></div>
                    <script>
                        $(document).ready(function() {
                            $("#Customers-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("ЕfficiencyList", "Report"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [
                                {
                                    field: "UserName",
                                    title: "@T("Admin.Report.EfficiencyList.UserName")"
                                }, {
                                    field: "MonthlyHours",
                                    title: "@T("Admin.Report.EfficiencyList.MonthlyHours")"
                                },{
                                    field: "HoursSold",
                                    title: "@T("Admin.Report.EfficiencyList.HoursSold")"
                                },{
                                    field: "Difference",
                                    title: "@T("Admin.Report.EfficiencyList.Difference")"
                                },{
                                    field: "Efficiency",
                                    title: "@T("Admin.Report.EfficiencyList.Efficiency")"
                                },
                                    @*{
                                    field: "Id",
                                    title: "@T("Admin.Common.Edit")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '<a class="btn btn-default" href="Edit/#=Id#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'                                
                                    }*@
                                ]
                            });
                        });
                    </script>
                    <script type="text/javascript">
                        $(document).ready(function () {
                            //load states when changing a country dropdownlist
                            @*$("#@Html.FieldIdFor(model => model.CountryId)").change(function() {
                                var selectedItem = $(this).val();
                                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                                $.ajax({
                                    cache: false,
                                    type: "GET",
                                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                                    data: { "countryId": selectedItem, "addAsterisk": "true" },
                                    success: function(data) {
                                        ddlStates.html('');
                                        $.each(data, function(id, option) {
                                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                        });
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert('Failed to retrieve states.');
                                    }
                                });
                            });*@

                            //search button
                            $('#search-Customers').click(function() {
                                //search
                                var grid = $('#Customers-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                return false;
                            });

                            @*$("#@Html.FieldIdFor(model => model.SearchCustomerName)").keydown(function(event) {
                                if (event.keyCode == 13) {
                                    $("#search-Customers").click();
                                    return false;
                                }
                            });*@
                        });

                        function additionalData() {
                            var data = {
                                @*SearchCustomerName: $('#@Html.FieldIdFor(model => model.SearchCustomerName)').val(),
                                CountryId: $('#@Html.FieldIdFor(model => model.CountryId)').val(),
                                StateProvinceId: $('#@Html.FieldIdFor(model => model.StateProvinceId)').val(),
                                SearchPublishedId: $('#@Html.FieldIdFor(model => model.SearchPublishedId)').val()*@
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>

@*<script type="text/javascript">
    $(document).ready(stateProvinceFilter());

    function stateProvinceFilter() {
        var selectedItem = $("#CountryId").val();
        var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.Action("GetStatesByCountryId", "Country"))",
            data: { "countryId": selectedItem, "addSelectStateItem": "false" },
            success: function (data) {
                ddlStates.html('');
                $.each(data, function (id, option) {
                    ddlStates.append($('<option></option>').val(option.id).html(option.name));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
            }
        });
    };
</script>*@
