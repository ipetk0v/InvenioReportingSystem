@model OrderModel
@using Invenio.Admin.Models.Orders;
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "order-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}
<div class="content">
    <div class="form-horizontal">
        <div id="User-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("admin.catalog.order.info"), string.IsNullOrEmpty(Model.TabReload))
                @Html.RenderBootstrapTabHeader("tab-blocked-criteria", @T("admin.catalog.order.blocked.criteria"), Model.TabReload == "tab-blocked-criteria")
                @Html.RenderBootstrapTabHeader("tab-rework-criteria", @T("admin.catalog.order.rework.criteria"), Model.TabReload == "tab-rework-criteria")
                @Html.RenderBootstrapTabHeader("tab-order-attributes", @T("Admin.Catalog.Orders.OrderAttributes"))
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), string.IsNullOrEmpty(Model.TabReload))
                @Html.RenderBootstrapTabContent("tab-blocked-criteria", TabBlockedCriteria(), Model.TabReload == "tab-blocked-criteria")
                @Html.RenderBootstrapTabContent("tab-rework-criteria", TabReworkCriteria(), Model.TabReload == "tab-rework-criteria")
                @Html.RenderBootstrapTabContent("tab-order-attributes", @TabOrderAttributes())
            </div>
        </div>
    </div>
</div>
@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                @T("admin.catalog.orders.commoninfo")
            </div>
            <div class="panel-body">
                <div>
                    @Html.HiddenFor(model => model.CreatedOnUtc)
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.supplierId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.supplierId, Model.AvailableSuppliers)
                            @Html.ValidationMessageFor(model => model.supplierId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.Number)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.Number, required: true)
                            @Html.ValidationMessageFor(model => model.Number)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.PartsPerHour)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.PartsPerHour)
                            @Html.ValidationMessageFor(model => model.PartsPerHour)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.TotalPartsQuantity)
                        </div>
                        <div class="col-md-9">
                            @if (Model.IsChargeNumberQuantityAvailable)
                            {
                                <input value="@Model.TotalPartsQuantity" readonly class="form-control" style="width:300px;" />
                            }
                            else
                            {
                                @Html.NopEditorFor(model => model.TotalPartsQuantity)
                            }
                            @Html.ValidationMessageFor(model => model.TotalPartsQuantity)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.StartDate)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.StartDate)
                            @Html.ValidationMessageFor(model => model.StartDate)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.EndDate)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.EndDate)
                            @Html.ValidationMessageFor(model => model.EndDate)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.DisplayOrder)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.DisplayOrder)
                            @Html.ValidationMessageFor(model => model.DisplayOrder)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.Published)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(x => x.Published)
                            @Html.ValidationMessageFor(model => model.Published)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="panel panel-default">
                <div class="panel-heading">
                    @T("admin.catalog.orders.partinfo")
                </div>
                <div class="panel-body">
                    <div>
                        <input name="PartId" value="@Model.PartId" hidden="hidden" />
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.NopLabelFor(model => model.PartName)
                            </div>
                            <div class="col-md-9">
                                @Html.NopEditorFor(model => model.PartName, required: true)
                                @Html.ValidationMessageFor(model => model.PartName)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.NopLabelFor(model => model.PartSerNumer)
                            </div>
                            <div class="col-md-9">
                                @Html.NopEditorFor(model => model.PartSerNumer, required: true)
                                @Html.ValidationMessageFor(model => model.PartSerNumer)
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
    </div>
}
@helper TabBlockedCriteria()
{
    var defaultGridPageSize = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    if (Model.Id > 0)
    {
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="blocked-criteria-grid"></div>
                    <script>
                $(document).ready(function() {
                    $("#blocked-criteria-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("CriteriaBlockedParts", "Criteria", new {orderId = Model.Id}))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                destroy: {
                                    url: "@Html.Raw(Url.Action("CriteriaBlockedPartsDelete", "Criteria", new {orderId = Model.Id}))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        //do not implicitly specify all fields
                                        //we do it only for fields which implicitly require it
                                        //otherwise, they'll be formatted wrong way
                                        CreatedOn: { type: "date" }
                                    }
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        editable: {
                            confirmation: "@T("Admin.Common.DeleteConfirmation")",
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [
                         {
                         field: "Description",
                         title: "@T("Admin.Orders.Criteria.Fields.Description")",
                         encoded: false
                         },
                        {
                            command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                            title: "@T("Admin.Common.Delete")",
                            width: 100
                        }
                        ]
                    });
                });
                    </script>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    @T("Admin.Orders.Criteria.AddTitle")
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-2">
                            @Html.NopLabelFor(model => model.AddBlockedCriteriaDescription)
                        </div>
                        <div class="col-md-8">
                            @Html.NopEditorFor(model => model.AddBlockedCriteriaDescription)
                            @Html.ValidationMessageFor(model => model.AddBlockedCriteriaDescription)
                        </div>
                        <div class="col-md-2">
                            <button type="button" id="add-bloked-criteria" class="btn btn-primary">@T("Admin.Orders.Criteria.AddButton")</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script type="text/javascript">
        $(document).ready(function () {
            $('#add-bloked-criteria').click(function () {
                var criteriaMessage = $("#@Html.FieldIdFor(model => model.AddBlockedCriteriaDescription)").val();
                $('#add-bloked-criteria').attr('disabled', true);

                var postData = {
                    message: criteriaMessage,
                    orderId: @Model.Id
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache:false,
                    type: "POST",
                    url: "@(Url.Action("CriteriaBlockedPartsAdd", "Criteria"))",
                    data: postData,
                    success: function (data) {
                        var grid = $("#blocked-criteria-grid").data('kendoGrid');
                        grid.dataSource.read();
                        $('#add-bloked-criteria').attr('disabled', false);
                    },
                    error:function (xhr, ajaxOptions, thrownError){
                        alert('Failed to add order criteria.');
                        $('#add-bloked-criteria').attr('disabled', false);
                    }
                });
            });
        });
        </script>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @T("Admin.Catalog.Order.NokCriteria.SaveBeforeEdit")
            </div>
        </div>
    }
}
@helper TabReworkCriteria()
{
    var defaultGridPageSize = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Invenio.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    if (Model.Id > 0)
    {
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="rework-criteria-grid"></div>
                    <script>
                $(document).ready(function() {
                    $("#rework-criteria-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("CriteriaReworkParts", "Criteria", new {orderId = Model.Id}))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                destroy: {
                                    url: "@Html.Raw(Url.Action("CriteriaReworkPartsDelete", "Criteria", new {orderId = Model.Id}))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        //do not implicitly specify all fields
                                        //we do it only for fields which implicitly require it
                                        //otherwise, they'll be formatted wrong way
                                        CreatedOn: { type: "date" }
                                    }
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        editable: {
                            confirmation: "@T("Admin.Common.DeleteConfirmation")",
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [
                         {
                         field: "Description",
                         title: "@T("Admin.Orders.Criteria.Fields.Description")",
                         encoded: false
                         },
                        {
                            command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                            title: "@T("Admin.Common.Delete")",
                            width: 100
                        }
                        ]
                    });
                });
                    </script>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    @T("Admin.Orders.Criteria.AddTitle")
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-2">
                            @Html.NopLabelFor(model => model.AddReworkedCriteriaDescription)
                        </div>
                        <div class="col-md-8">
                            @Html.NopEditorFor(model => model.AddReworkedCriteriaDescription)
                            @Html.ValidationMessageFor(model => model.AddReworkedCriteriaDescription)
                        </div>
                        <div class="col-md-2">
                            <button type="button" id="add-rework-criteria" class="btn btn-primary">@T("Admin.Orders.Criteria.AddButton")</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script type="text/javascript">
    $(document).ready(function () {
        $('#add-rework-criteria').click(function () {
            var criteriaMessage = $("#@Html.FieldIdFor(model => model.AddReworkedCriteriaDescription)").val();
            $('#add-rework-criteria').attr('disabled', true);

            var postData = {
                message: criteriaMessage,
                orderId: @Model.Id
                };
            addAntiForgeryToken(postData);

            $.ajax({
                cache:false,
                type: "POST",
                url: "@(Url.Action("CriteriaReworkPartsAdd", "Criteria"))",
                data: postData,
                success: function (data) {
                    var grid = $("#rework-criteria-grid").data('kendoGrid');
                    grid.dataSource.read();
                    $('#add-rework-criteria').attr('disabled', false);
                },
                error:function (xhr, ajaxOptions, thrownError){
                    alert('Failed to add order criteria.');
                    $('#add-rework-criteria').attr('disabled', false);
                }
            });
        });
    });
        </script>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @T("Admin.Catalog.Order.ReworkCriteria.SaveBeforeEdit")
            </div>
        </div>
    }
}
@helper TabOrderAttributes()
{
    @Html.Partial("_CreateOrUpdate.OrderAttributes", Model)
}